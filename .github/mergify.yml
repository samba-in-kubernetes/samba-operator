---
defaults:
  actions:
    queue:
      name: default
      method: rebase
      update_method: rebase


# each test should be listed separately, do not use regular expressions:
# https://docs.mergify.io/conditions.html#validating-all-status-check
# TODO: Use mergify's recently added 'shared configuration support'
# to dedup some of the check-x=y repetition in the future.
queue_rules:
  - name: default
    conditions:
      - check-success=check
      - check-success=build
      - check-success=podmanbuild
      - check-success=dockerbuild
      - check-success=test
      - check-success=test-kubernetes
      - check-success=centos-ci/sink-clustered/mini-k8s-1.25
      - check-success=dpulls


pull_request_rules:
  # Clearing approvals after content changes
  - name: Remove outdated approvals
    conditions:
      - base=master
    actions:
      dismiss_reviews:
        approved: true
        changes_requested: false
  # Perform automatic merge on conditions
  - name: Automatic merge on approval
    conditions:
      - check-success=check
      - check-success=build
      - check-success=podmanbuild
      - check-success=dockerbuild
      - check-success=test
      - check-success=test-kubernetes
      - check-success=centos-ci/sink-clustered/mini-k8s-1.25
      - check-success=dpulls
      - "-draft"
      # Contributors should set the 'do-not-merge' label if they don't want
      # the PR to be (auto)merged for some reason.
      - "label!=do-not-merge"
      # A reviewer should set a label starting with 'review-in-progress' (and
      # suffixed by their username) in order to indicate a detailed review has been
      # started and not completed. This will hold the PR until the label has been
      # removed.
      - "-label~=^review-in-progress"
      - "base=master"
      # Even if there are 2 or more approvals we won't automerge if there are
      # any changes requested.
      - "#changes-requested-reviews-by=0"
      - or:
          # Any contributor's PR can be automerged with 2 (or more) reviews.
          - "#approved-reviews-by>=2"
          # A maintainer's contribution only needs 1 review BUT we give a grace
          # period over just two weeks for a 2nd reviewer to hopefully appear.
          - and:
              - "updated-at<15 days ago"
              - "author=@maintainers"
              - "#approved-reviews-by>=1"
    actions:
      queue: {}
      dismiss_reviews: {}
  # Conflict resolution prompt
  - name: Ask contributor to resolve a conflict
    conditions:
      - conflict
    actions:
      comment:
        message: "This pull request now has conflicts with the target branch.
        Please resolve these conflicts and force push the updated branch."
